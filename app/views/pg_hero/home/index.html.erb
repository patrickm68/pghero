<% if @transaction_id_danger.any? %>
  <div class="alert alert-danger">
    Database shutdown imminent due to transaction ID wraparound failure
  </div>
  <div class="content">
    <p>For each table, run:</p>
    <code><pre>VACUUM FREEZE VERBOSE table</pre></code>
    <p><%= link_to "Read more", "http://www.postgresql.org/docs/9.1/static/routine-vacuuming.html#VACUUM-FOR-WRAPAROUND", target: "_blank" %></p>
    <table class="table">
      <thead>
        <tr>
          <th>Table</th>
          <th style="width: 20%;">Transactions Before Shutdown</th>
        </tr>
      </thead>
      <tbody>
        <% @transaction_id_danger.each do |query| %>
          <tr>
            <td><%= query["table"] %></td>
            <td><%= number_with_delimiter(query["transactions_before_shutdown"]) %></td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
<% end %>

<div id="status">
  <% if @replica %>
    <div class="alert alert-<%= @good_replication_lag ? "success" : "warning" %>">
      <% if @good_replication_lag %>
        Healthy replication lag
      <% else %>
        High replication lag
      <% end %>
      <span class="tiny"><%= number_with_delimiter((@replication_lag * 1000).round) %> ms</span>
    </div>
  <% end %>
  <div class="alert alert-<%= @long_running_queries.empty? ? "success" : "warning" %>">
    <% if @long_running_queries.any? %>
      <%= pluralize(@long_running_queries.size, "long running query") %>
    <% else %>
      No long running queries
    <% end %>
  </div>
  <div class="alert alert-<%= @good_cache_rate ? "success" : "warning" %>">
    <% if @good_cache_rate %>
      Cache hit rate above <%= PgHero.cache_hit_rate_threshold %>%
    <% else %>
      Low cache hit rate
    <% end %>
  </div>
  <div class="alert alert-<%= @good_total_connections ? "success" : "warning" %>">
    <% if @good_total_connections %>
      Healthy number of connections
    <% else %>
      High number of connections
    <% end %>
    <span class="tiny"><%= @total_connections %></span>
  </div>
  <div class="alert alert-<%= @autovacuum_danger.empty? ? "success" : "warning" %>">
    <% if @autovacuum_danger.any? %>
      <%= pluralize(@autovacuum_danger.size, "table") %> approaching autovacuum freeze max age
    <% else %>
      No autovacuum danger
    <% end %>
  </div>
  <div class="alert alert-<%= @query_stats_enabled && @slow_queries.empty? ? "success" : "warning" %>">
    <% if !@query_stats_enabled %>
      Query stats must be enabled for slow queries
    <% elsif @slow_queries.any? %>
      <%= pluralize(@slow_queries.size, "slow query") %>
    <% else %>
      No slow queries
    <% end %>
  </div>
  <div class="alert alert-<%= @invalid_indexes.empty? ? "success" : "warning" %>">
    <% if @invalid_indexes.any? %>
      <%= pluralize(@invalid_indexes.size, "invalid index", "invalid indexes") %>
    <% else %>
      No invalid indexes
    <% end %>
  </div>
  <div class="alert alert-<%= @missing_indexes.empty? ? "success" : "warning" %>">
    <% if @missing_indexes.any? %>
      <%= pluralize(@missing_indexes.size, "table appears", "tables appear") %> to be missing indexes
    <% else %>
      No missing indexes
    <% end %>
  </div>
  <div class="alert alert-<%= @unused_indexes.empty? ? "success" : "warning" %>">
    <% if @unused_indexes.any? %>
      <%= pluralize(@unused_indexes.size, "unused index", "unused indexes") %>
    <% else %>
      No unused indexes
    <% end %>
  </div>
</div>

<% if @replica && !@good_replication_lag %>
  <div class="content">
    <h1>High Replication Lag</h1>

    <p><%= pluralize(@replication_lag.round, "second") %></p>
  </div>
<% end %>

<% if @long_running_queries.any? %>
  <div class="content">
    <%= button_to "Kill All", kill_long_running_queries_path, class: "btn btn-danger", style: "float: right;" %>
    <h1>Long Running Queries</h1>

    <%= render partial: "live_queries_table", locals: {queries: @long_running_queries} %>
  </div>
<% end %>

<% if !@good_cache_rate %>
  <div class="content">
    <h1>Low Cache Hit Rate</h1>

    <p>
      Index Hit Rate: <%= (@index_hit_rate * 100).round(1) %>%
      <br />
      Table Hit Rate: <%= (@table_hit_rate * 100).round(1) %>%
    </p>

    <p>
      The cache hit rate <%= link_to "should be above 99%", "https://devcenter.heroku.com/articles/understanding-postgres-data-caching", target: "_blank" %> in most cases.  You can often increase this by adding more memory.
      <!-- TODO better suggestions -->
    </p>
  </div>
<% end %>

<% if !@good_total_connections %>
  <div class="content">
    <h1>High Number of Connections</h1>
    <%= render partial: "connections_table", locals: {total_connections: @total_connections, connection_sources: PgHero.connection_sources_by_database.first(10), show_message: true} %>
  </div>
<% end %>

<% if @autovacuum_danger.any? %>
  <div class="content">
    <h1>Autovacuum Danger</h1>
    <p>For each table, run:</p>
    <code><pre>VACUUM FREEZE VERBOSE table</pre></code>
    <p><%= link_to "Read more", "http://www.postgresql.org/docs/9.1/static/routine-vacuuming.html#VACUUM-FOR-WRAPAROUND", target: "_blank" %></p>
    <table class="table">
      <thead>
        <tr>
          <th>Table</th>
          <th style="width: 20%;">Transactions Before Autovacuum</th>
        </tr>
      </thead>
      <tbody>
        <% @autovacuum_danger.each do |query| %>
          <tr>
            <td><%= query["table"] %></td>
            <td><%= number_with_delimiter(query["transactions_before_autovacuum"]) %></td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
<% end %>

<% if !@query_stats_enabled %>
  <div class="content">
    <h1>Query Stats</h1>

    <% if @query_stats_available %>
      <p>
        Query stats are available but not enabled.
        <%= button_to "Enable", enable_query_stats_path, class: "btn btn-info" %>
      </p>
    <% else %>
      <p>Make them available by adding the following lines to <code>postgresql.conf</code>:</p>
      <pre>shared_preload_libraries = 'pg_stat_statements'
pg_stat_statements.track = all</pre>
      <p>Restart the server for the changes to take effect.</p>
    <% end %>
  </div>
<% end %>

<% if @query_stats_enabled && @slow_queries.any? %>
  <div class="content">
    <h1>Slow Queries</h1>

    <p>Slow queries take <%= PgHero.slow_query_ms %> ms or more on average and have been called at least <%= PgHero.slow_query_calls %> times.</p>
    <p><%= link_to "Explain queries", explain_path %> to see where to add indexes.</p>

    <%= render partial: "queries_table", locals: {queries: @slow_queries} %>
  </div>
<% end %>

<% if @invalid_indexes.any? %>
  <div class="content">
    <h1>Invalid Indexes</h1>

    <p>These indexes exist, but canâ€™t be used. You should recreate them.</p>

    <table class="table">
      <thead>
        <tr>
          <th>Name</th>
        </tr>
      </thead>
      <tbody>
        <% @invalid_indexes.each do |query| %>
          <tr>
            <td><%= query["index"] %></td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
<% end %>

<% if @missing_indexes.any? %>
  <div class="content">
    <h1>Missing Indexes</h1>

    <p>These tables have a large number of rows but indexes are not used often. Add indexes for faster queries.</p>

    <table class="table">
      <thead>
        <tr>
          <th>Table</th>
          <th>% of Time Index Used</th>
          <th>Rows in Table</th>
        </tr>
      </thead>
      <tbody>
        <% @missing_indexes.each do |query| %>
          <tr>
            <td><%= query["table"] %></td>
            <td style="width: 30%;"><%= query["percent_of_times_index_used"] %></td>
            <td style="width: 20%;"><%= number_with_delimiter(query["rows_in_table"]) %></td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
<% end %>

<% if @unused_indexes.any? %>
  <div class="content">
    <h1>Unused Indexes</h1>

    <p>
      Unused indexes cause unnecessary overhead. Remove them
      <a href="javascript: void(0);" onclick="document.getElementById('migration').style.display = 'block';">with a migration</a>
      for faster writes.
    </p>

    <div id="migration" style="display: none;">
      <pre>rails g migration remove_unused_indexes</pre>
      <p>And paste</p>
      <pre style="overflow: scroll; white-space: pre; word-break: normal;"><% @unused_indexes.each do |query| %>
remove_index <%= query["table"].to_sym.inspect %>, name: <%= query["index"].to_s.inspect %><% end %></pre>
    </div>

    <table class="table">
      <thead>
        <tr>
          <th>Name</th>
          <th style="width: 20%;">Index Size</th>
        </tr>
      </thead>
      <tbody>
        <% @unused_indexes.each do |query| %>
          <tr>
            <td><%= query["index"] %><div class="text-muted">on <%= query["table"] %></div></td>
            <td><%= query["index_size"] %></td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
<% end %>
